Every October, we take a party of third year undergraduates to the Isle of Cumbrae for residential field course. Whilst there, they are immersed in a world of intertidal ecology, looking at influences of habitat characteristics, adaptation and interactions that makes the descriptions and illustrations of Begon or Molles a little more real and apparent.

As part of the work, we look at zonation on both rocky and sandy shores (like a million other student groups!). The class work together to collate data from transects up the shore and examine patterns of distibution.

The classic (although some would say not ideal) way of illustrating such zonation patterns is through kite diagrams. Back in the day, we made use of the Fieldworks software which as far as I can determine is no longer available and was rather clunky as well. As we worked in groups across several labs, this also required running around with a USB stick to compile the data from the different groups, before doing the final plotting.

Fast foward a few years and we started to use a shared Google spreadsheet to collate the data instead, which made life a lot easier on that front. Tbe actual kite diagram production was still not straightforward and I experimented with various Excel-based solutions, before starting to work with R code that I found on the internet.

This year I was determined to try and make the process more streamlined, hence the current post. The `googlekites` function allows the automatic production of kite diagrams from a shared Google spreadsheet. I can't claim much credit for this however; the core code for the kite diagram comes from David Hood, see [here](https://rpubs.com/thoughtfulbloke/kitegraph). All I did was to add in code to wrangle the data from the spreadsheet into a suitable format and add a few bells and whistles to the actual plotting, such as modifying the axis ticks and using better [viridis](https://cran.r-project.org/package=viridis)-based colours.

The function has two arguments:

sheet_ref: the url to the Google spreadsheet that is being used. The sheet needs to be set to be shared appropriately.

min_abund: the minimum total abundance of taxa that should be plotted. Taxa with low total numbers are often difficult to interpret in terms of distibution patterns. This defaults to 50; too low a value can result in the plot becoming very crowded.

The spreadsheet import is handled by the [gsheet](https://cran.r-project.org/package=gsheet) package. I could have used the [googlesheets](https://cran.r-project.org/package=googlesheets) package as an alternative, but this has quite a large footprint in terms of dependencies so `gsheet` keeps it lightweight. The only other dependency is [viridis](https://cran.r-project.org/package=viridis), for the colour-blind friendly colour scheme.

The example spreadsheet used can be found [here](https://docs.google.com/spreadsheets/d/1pv041th4inXsSRTy8afM0gE14dgeR9TvwmJWEnnC6LQ/edit#gid=0).It may not have the most logical setup from some persepctives, but it works for us and the code in the function can be easily adapted to other setups.

Full code for the function is given below:

An example of use, based on the spreadsheet linked above.

```{r, eval=TRUE}
# set the values for the two arguments
sheet_ref<-'https://docs.google.com/spreadsheets/d/1pv041th4inXsSRTy8afM0gE14dgeR9TvwmJWEnnC6LQ/edit#gid=0'

min_abund<-70

# run the function
googlekites(sheet_ref, min_abund)

```

First field testing will come in three weeks when we are off on the trip again,so there may be a few tweaks as a result afterwards!